{"version":3,"file":"static/js/998.715fe9c0.chunk.js","mappings":"4MAkBA,EAVkC,SAAHA,GAAkB,IAAZC,EAAID,EAAJC,KAC1BC,GAAeC,EAAAA,EAAAA,KAAfD,YAEP,OACIE,EAAAA,EAAAA,KAAA,MAAIC,QAAS,kBAAKH,EAAYI,QAAQL,EAAKM,OAAO,EAAEC,UAAU,sDAAqDC,SAC9GR,GAAQS,OAAOC,OAAOV,GAAMW,KAAI,SAACC,EAASC,GAAC,OAAKV,EAAAA,EAAAA,KAAA,MAAYI,UAAU,YAAWC,SAAEI,GAA1BC,EAAmC,KAGzG,ECWA,EAxBoB,WAChB,IAAAC,GAAqCZ,EAAAA,EAAAA,KAA9Ba,EAAOD,EAAPC,QAASC,EAAiBF,EAAjBE,kBACTC,EAA0DF,EAA1DE,cAAeC,EAA2CH,EAA3CG,WAAYC,EAA+BJ,EAA/BI,WAAYC,EAAmBL,EAAnBK,SAAUC,EAASN,EAATM,MACjDC,EAAwCN,EAAxCM,iBAAkBC,EAAsBP,EAAtBO,SAAUC,EAAYR,EAAZQ,SAEnC,OACIC,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,yCAAyC,aAAW,mBAAkBC,SAAA,EACrFiB,EAAAA,EAAAA,MAAA,QAAMlB,UAAU,qCAAoCC,SAAA,CAAC,YAAQiB,EAAAA,EAAAA,MAAA,QAAMlB,UAAU,8BAA6BC,SAAA,CAAEW,EAAa,EAAE,IAAEC,EAAWC,EAAQA,EAAQD,KAAgB,QAAIjB,EAAAA,EAAAA,KAAA,QAAMI,UAAU,8BAA6BC,SAAEa,QAC3NI,EAAAA,EAAAA,MAAA,MAAIlB,UAAU,sCAAqCC,SAAA,EACnDL,EAAAA,EAAAA,KAAA,MAAAK,UACIL,EAAAA,EAAAA,KAAA,QAAMC,QAAS,kBAAKoB,GAAU,EAAEjB,UAAS,GAAAmB,OAAoB,IAAfR,GAAoB,yCAAwC,iLAAgLV,SAAC,eAE9RS,EAAcN,KAAK,SAAAgB,GAAG,OAAIxB,EAAAA,EAAAA,KAAA,MAAAK,UACvBL,EAAAA,EAAAA,KAAA,QAAMC,QAAS,kBAAKkB,EAAiBK,EAAI,EAAEpB,UAAU,+JAA8JC,SAAEmB,KADrLA,EAE/B,KAELxB,EAAAA,EAAAA,KAAA,MAAAK,UACIL,EAAAA,EAAAA,KAAA,QAAMC,QAAS,kBAAKmB,GAAU,EAAEhB,UAAS,GAAAmB,OAAKR,IAAeD,EAAcW,QAAU,yCAAwC,6KAA4KpB,SAAC,gBAKtT,ECMA,EAtB0C,SAAHT,GAAmC,IAA7B8B,EAAS9B,EAAT8B,UAAWC,EAAU/B,EAAV+B,WAEpD,OACI3B,EAAAA,EAAAA,KAAA4B,EAAAA,SAAA,CAAAvB,UACIiB,EAAAA,EAAAA,MAAA,OAAKlB,UAAU,yDAAwDC,SAAA,EACnEiB,EAAAA,EAAAA,MAAA,SAAOlB,UAAU,oEAAmEC,SAAA,EAChFL,EAAAA,EAAAA,KAAA,SAAOI,UAAU,8CAA6CC,UAC1DL,EAAAA,EAAAA,KAAA,MAAAK,SAAKqB,EAAUlB,KAAI,SAACX,GAAI,OAAKG,EAAAA,EAAAA,KAAA,MAAe6B,MAAM,MAAMzB,UAAU,YAAWC,SAAER,GAAzCA,EAAmD,SAG7FG,EAAAA,EAAAA,KAAA,SAAAK,SACKsB,EAAWnB,KAAI,SAACX,GAAI,OAAKG,EAAAA,EAAAA,KAAC8B,EAAI,CAAmBjC,KAAMA,GAAnBA,EAAKM,OAAqB,UAGvEH,EAAAA,EAAAA,KAAC+B,EAAU,QAM3B,C","sources":["components/Grid/Item.tsx","components/Grid/Pagination.tsx","components/Grid/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport { useAppContext } from '../../context';\r\n\r\n\r\ninterface ItemProps {\r\n    item: any\r\n}\r\n\r\nconst Item: React.FC<ItemProps> = ({ item }) => {\r\n    const {itemActions} = useAppContext();\r\n\r\n    return (\r\n        <tr onClick={()=> itemActions.getItem(item.serial)} className=\"cursor-pointer bg-white border-b  hover:bg-gray-50 \">\r\n            {item && Object.values(item).map((val:any, i) => <td key={i} className=\"px-6 py-4\">{val}</td>)}\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default Item;\r\n","\r\nimport { useAppContext } from '../../context';\r\n\r\nconst Pagination  = () => {\r\n    const {myState, paginationActions} = useAppContext()\r\n    const {numberOfPages, pageNumber, startPoint, endPoint, total} = myState\r\n    const {changePageNumber, nextPage, prevPage} = paginationActions\r\n\r\n    return (\r\n        <nav className=\"flex items-center justify-between pt-4\" aria-label=\"Table navigation\">\r\n        <span className=\"text-sm font-normal text-gray-500 \">Showing <span className=\"font-semibold text-gray-900\">{startPoint + 1}-{endPoint > total ? total : endPoint}</span> of <span className=\"font-semibold text-gray-900\">{total}</span></span>\r\n        <ul className=\"inline-flex -space-x-px text-sm h-8\">\r\n        <li>\r\n            <span onClick={()=> prevPage()} className={`${pageNumber === 1 && 'pointer-events-none cursor-not-allowed'} cursor-pointer flex items-center justify-center px-3 h-8 ml-0 leading-tight text-gray-500 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-100 hover:text-gray-700`}>Previous</span>\r\n        </li>\r\n        {numberOfPages.map( num => <li key={num}>\r\n            <span onClick={()=> changePageNumber(num)} className=\"cursor-pointer flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 hover:bg-gray-100 hover:text-gray-700  \">{num}</span>\r\n        </li>)}\r\n        \r\n        <li>\r\n            <span onClick={()=> nextPage()} className={`${pageNumber === numberOfPages.length && 'pointer-events-none cursor-not-allowed'} cursor-pointer flex items-center justify-center px-3 h-8 leading-tight text-gray-500 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-100 hover:text-gray-700 `}>Next</span>\r\n        </li>\r\n        </ul>\r\n    </nav>\r\n    );\r\n};\r\n\r\nexport default Pagination ;\r\n","import React from 'react';\r\nimport Item from './Item';\r\nimport Pagination from './Pagination';\r\n\r\ninterface GridDataProps {\r\n    tableHead: string[]\r\n    tableItems: any[]\r\n}\r\n//overflow-x-auto\r\nconst GridData: React.FC<GridDataProps> = ({ tableHead, tableItems }) => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"relative overflow-x-auto shadow-md sm:rounded-lg my-10\">\r\n                <table className=\"w-full overflow-hidden min-w-max text-sm text-left text-gray-500 \">\r\n                    <thead className=\"text-xs text-gray-700 uppercase bg-gray-50 \">\r\n                        <tr>{tableHead.map((item) => <th key={item} scope=\"col\" className=\"px-6 py-3\">{item}</th>)}\r\n                    </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {tableItems.map((item) => <Item key={item.serial} item={item}/>)}\r\n                    </tbody>\r\n                </table>\r\n                <Pagination />\r\n            </div>\r\n\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default GridData;\r\n"],"names":["_ref","item","itemActions","useAppContext","_jsx","onClick","getItem","serial","className","children","Object","values","map","val","i","_useAppContext","myState","paginationActions","numberOfPages","pageNumber","startPoint","endPoint","total","changePageNumber","nextPage","prevPage","_jsxs","concat","num","length","tableHead","tableItems","_Fragment","scope","Item","Pagination"],"sourceRoot":""}